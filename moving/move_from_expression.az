public fn main()
{
    // TODO perhaps this case should be allowed by an implicit move?
    take(move create(Author()));
}

public class Book
{
    public let author: mut Author;

    public init(mut self, .author) { }
}

public class Author
{
}

// A function that returns mutable rather than isolated because it doesn't know if the author is
// isolated.
public fn create(author: mut Author) -> mut Book
    => Book(author);

public fn take(_: iso Book) { }
