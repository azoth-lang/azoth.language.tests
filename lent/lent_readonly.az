// `lent` readonly isn't treated specially, it just means that the parameter is lent and readonly

public fn main()
{
    let book: mut = Book(Author());
    {
        let reader = book.test_read();
        book.author = Author(); // Allowed because `book` is still mutable
    }
    book.author = Author();
}

public class Book
{
    public var author: Author;

    // The inferred return type of this is `mut Book`
    public init(mut self, .author) { }

    public fn test_read(lent self) -> Reader
        => Reader();
}

public class Author
{
}

public class Reader
{
    public init(mut self) { }
}
